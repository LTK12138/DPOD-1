from tqdm import tqdm
import torch
from DPOD.model import PoseBlock
import os
import numpy as np
from argparse import ArgumentParser
from glob import glob
import pickle
from DPOD.datasets import PATHS
import json
import pandas as pd
from DPOD.models_handler import rotation_matrix_to_kaggle_aw_pitch_roll


def make_submission_from_ransac_directory(path_to_instances_dir, path_to_submission_file):

    instances_paths = glob(f'{path_to_instances_dir}/*.pkl')

    submission_series = pd.Series()

    for instance_path in tqdm(instances_paths):
        image_id = os.path.split(instance_path)[1][:-len('_instances.pkl')]
        with open(instance_path, 'rb') as file:
            instances = pickle.load(file)
            prediction_string = ''
            for n_instance, instance in enumerate(instances):
                model_id, translation_vector, rotation_matrix = instance
                angles = list(rotation_matrix_to_kaggle_aw_pitch_roll(rotation_matrix))
                coords = list(translation_vector)
                confidence = 1 - n_instance*0.01
                prediction_string += ' '.join(str(x) for x in angles+coords+[confidence])+' '

        submission_series[image_id] = prediction_string
    
    submission_series.to_csv(path_to_submission_file, index_label='ImageId', header=["PredictionString"])


if __name__ == "__main__":
    arg_parser = ArgumentParser(description="""
    makes submission file from instances generated by apply_ransac.py 
    present in folder path_to_instances_dir
    """)
    arg_parser.add_argument('path_to_instances_dir')
    arg_parser.add_argument('path_to_submission_file')

    args = arg_parser.parse_args()

    make_submission_from_ransac_directory(args.path_to_instances_dir, args.path_to_submission_file)
